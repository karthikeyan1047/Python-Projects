# ================
# # MONTH RANGE
# ================

### OLD

total_files = 0
# year_wise_files = {}
def process_all_for_user(email, password, files, instance):
    global driver, total_files
    driver = webdriver.Chrome(options=options)
    driver.implicitly_wait(60)

    login_and_select_date_field(email, password, date_field)

    for template, yr_start, center, step in files:
        dropdown_select('pn_id_7', template)
        dropdown_select('pn_id_11', center)

        for year in range(yr_start, yr_curr + 1):
            # year_wise_file_count = 0
            month_ranges = generate_month_ranges(year, step)
            for sm, em in month_ranges:
                date_from, date_to = get_date_range(year, sm, em)
                date_picker(date_from, date_to)
                time.sleep(1)

                mns = '' if len(month_ranges) == 1 else f"_{sm}" if sm == em else f"_{sm}-{em}"
                s_file = f"{file_dict[template]}_{instance}_{file_dict[center]}_{year}{mns}"
                schedule(s_file)
                total_files += 1
                # year_wise_file_count += 1


### CHECKING

import _functions as cfx
total_files = 0
month_ranges = [(1, 4), (5, 8), (9,12)]
to_process = month_ranges.copy()
while to_process:
    sm, em = to_process.pop(0)
    alert_text = cfx.inputbox("Error", "Error")

    if alert_text and "e" in alert_text:
        if sm == em:
            continue
            
        mid = (sm + em) // 2
        to_process.insert(0, (mid + 1, em))
        to_process.insert(0, (sm, mid))
    else:
        total_files += 1


print(total_files)


### NEW

return alert_text   # -- in the last line of schedule
for year in range(yr_start, yr_curr + 1):
    # year_wise_file_count = 0
    month_ranges = generate_month_ranges(year, step)
    to_process = month_ranges.copy()
    while to_process:
        sm, em = to_process.pop(0)
        date_from, date_to = get_date_range(year, sm, em)
        date_picker(date_from, date_to)
        time.sleep(1)

        mns = '' if len(month_ranges) == 1 else f"_{sm}" if sm == em else f"_{sm}-{em}"
        s_file = f"{file_dict[template]}_{instance}_{file_dict[center]}_{year}{mns}"
        alert_text = schedule(s_file)

        if alert_text and "Please contact administrator" in alert_text:
            if sm == em:
                continue
                
            mid = (sm + em) // 2
            to_process.insert(0, (mid + 1, em))
            to_process.insert(0, (sm, mid))
            total_files += 1
        else:
            total_files += 1



# =================
### DATE RANGE 
# =================

from datetime import datetime, timedelta
import _functions as cfx
total_files = 0
def process_date_range(date_from: datetime, date_to: datetime):
    global total_files
    alert_text = cfx.inputbox('Type', 'Enter the text : ')
    if alert_text == 'e':
        if (date_to - date_from).days == 0:
            return

        mid_date = date_from + (date_to - date_from) // 2
        next_start = mid_date + timedelta(days=1)

        process_date_range(date_from, mid_date)
        process_date_range(next_start, date_to)
        # print(date_from, date_to)
    else:
        total_files += 1
        print(date_from.date(), date_to.date())
        print((date_to.date() - date_from.date()).days)


start_date = datetime.strptime("03/07/2025", "%d/%m/%Y")
end_date = datetime.strptime("28/07/2025", "%d/%m/%Y")

total_files = 0
process_date_range(start_date, end_date)






def process_date_range(date_from: datetime, date_to: datetime):
    date_picker(date_from, date_to)
    time.sleep(1)
    sday = date_from.day
    eday = date_to.day
    mns = f"_{sm}_{iday}-{eday}"
    s_file = f"{file_dict[template]}_{instance}_{file_dict[center]}_{year}{mns}"
    alert_text = schedule(s_file)

    if alert_text and "Please contact administrator" in alert_text:
        if (date_to - date_from).days == 0:
            return
        mid_date = date_from + (date_to - date_from) // 2
        next_start = mid_date + timedelta(days=1)

        process_date_range(date_from, mid_date)
        process_date_range(next_start, date_to)
    else:
        total_files += 1 


return alert_text   # -- in the last line of schedule
for year in range(yr_start, yr_curr + 1):
    # year_wise_file_count = 0
    month_ranges = generate_month_ranges(year, step)
    to_process = month_ranges.copy()
    while to_process:
        sm, em = to_process.pop(0)
        date_from, date_to = get_date_range(year, sm, em)
        date_picker(date_from, date_to)
        time.sleep(1)

        mns = '' if len(month_ranges) == 1 else f"_{sm}" if sm == em else f"_{sm}-{em}"
        s_file = f"{file_dict[template]}_{instance}_{file_dict[center]}_{year}{mns}"
        alert_text = schedule(s_file)

        if alert_text and "Please contact administrator" in alert_text:
            if sm == em:
                date_from, date_to = get_date_range(year, sm, em)
                process_date_range(date_from, date_to)           
            
            mid = (sm + em) // 2
            to_process.insert(0, (mid + 1, em))
            to_process.insert(0, (sm, mid))
            total_files += 1
        else:
            total_files += 1